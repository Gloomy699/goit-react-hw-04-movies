{"version":3,"sources":["Components/SearchBar/SearchBar.module.css","Components/SearchBar/SearchBar.js","Views/MoviesView.js"],"names":["module","exports","SearchBar","onClick","useState","searchQuery","setSearchQuery","className","s","searchBar","onSubmit","evt","preventDefault","toast","error","input","type","autoComplete","placeholder","value","onChange","target","button","Movies","movies","setMovies","request","setRequest","page","setPage","totalPages","setTotalPages","useEffect","api","then","data","results","length","total_pages","MoviesList","Pagination","count","boundaryCount","color"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,UAAY,6BAA6B,MAAQ,yBAAyB,OAAS,4B,kGC4CtFC,EAxCG,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACKC,mBAAS,IADd,mBAC1BC,EAD0B,KACbC,EADa,KAiBjC,OACE,uBAAMC,UAAWC,IAAEC,UAAWC,SAXZ,SAAAC,GAClBA,EAAIC,iBAEgB,KAAhBP,EAIJF,EAAQE,GAHNQ,IAAMC,MAAM,8CAOd,UACE,gCACE,uBACEP,UAAWC,IAAEO,MACbC,KAAK,OACLC,aAAa,MACbC,YAAY,eACZC,MAAOd,EACPe,SAvBY,SAAAT,GAClBL,EAAeK,EAAIU,OAAOF,YAyBxB,wBAAQZ,UAAWC,IAAEc,OAAQN,KAAK,SAAlC,wB,gBCqBSO,UAhDA,WAAO,IAAD,EACSnB,mBAAS,MADlB,mBACZoB,EADY,KACJC,EADI,OAEWrB,mBAAS,IAFpB,mBAEZsB,EAFY,KAEHC,EAFG,OAGKvB,mBAAS,GAHd,mBAGZwB,EAHY,KAGNC,EAHM,OAIiBzB,mBAAS,GAJ1B,mBAIZ0B,EAJY,KAIAC,EAJA,KAMnBC,qBAAU,WACHN,GAILO,IAAiBP,EAASE,GAAMM,MAAK,SAAAC,GAC9BA,EAAKC,QAAQC,QAIlBZ,EAAUU,EAAKC,SACfL,EAAcI,EAAKG,cAJjBzB,IAAMC,MAAM,sCAMf,CAACY,EAASE,IAWb,OACE,qCACE,cAAC,EAAD,CAAWzB,QAXC,SAAAuB,GACdC,EAAWD,GACXG,EAAQ,MAULL,GAAU,cAACe,EAAA,EAAD,CAAYf,OAAQA,IAE9BM,EAAa,GACZ,cAACU,EAAA,EAAD,CACEC,MAAOX,EACPF,KAAMA,EACNR,SAba,SAACT,EAAKQ,GACzBU,EAAQV,IAaFuB,cAAe,EACfC,MAAM","file":"static/js/movies-view.f8d93eec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBar\":\"SearchBar_searchBar__3PtKk\",\"input\":\"SearchBar_input__3i3YX\",\"button\":\"SearchBar_button__26tHL\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport s from './SearchBar.module.css';\n\nconst SearchBar = ({ onClick }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const handleInput = evt => {\n    setSearchQuery(evt.target.value);\n  };\n\n  const handleClick = evt => {\n    evt.preventDefault();\n\n    if (searchQuery === '') {\n      toast.error('Nothing to find. Check input field please');\n      return;\n    }\n    onClick(searchQuery);\n  };\n\n  return (\n    <form className={s.searchBar} onSubmit={handleClick}>\n      <label>\n        <input\n          className={s.input}\n          type=\"text\"\n          autoComplete=\"off\"\n          placeholder=\"Search movie\"\n          value={searchQuery}\n          onChange={handleInput}\n        ></input>\n      </label>\n      <button className={s.button} type=\"submin\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nSearchBar.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default SearchBar;\n","import { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { Pagination } from '@material-ui/lab';\nimport SearchBar from '../Components/SearchBar';\nimport MoviesList from '../Components/MoviesList';\nimport * as api from '../Services/apiServices';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState(null);\n  const [request, setRequest] = useState('');\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  useEffect(() => {\n    if (!request) {\n      return;\n    }\n\n    api.searchMovies(request, page).then(data => {\n      if (!data.results.length) {\n        toast.error('Nothing was found. Try again.');\n        return;\n      }\n      setMovies(data.results);\n      setTotalPages(data.total_pages);\n    });\n  }, [request, page]);\n\n  const onClick = request => {\n    setRequest(request);\n    setPage(1);\n  };\n\n  const handleChange = (evt, value) => {\n    setPage(value);\n  };\n\n  return (\n    <>\n      <SearchBar onClick={onClick} />\n      {movies && <MoviesList movies={movies} />}\n\n      {totalPages > 1 && (\n        <Pagination\n          count={totalPages}\n          page={page}\n          onChange={handleChange}\n          boundaryCount={2}\n          color=\"secondary\"\n        />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"sourceRoot":""}