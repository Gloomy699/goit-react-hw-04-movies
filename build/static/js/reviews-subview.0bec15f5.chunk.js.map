{"version":3,"sources":["Components/Reviews/Reviews.module.css","Components/Reviews/Reviews.js"],"names":["module","exports","Reviews","movieId","useState","reviewsList","setReviewsList","page","setPage","totalPages","setTotalPages","useEffect","api","then","data","console","log","results","length","total_pages","toast","error","className","s","reviewList","map","review","reviewItem","imageBox","avatar","src","path","author_details","avatar_path","includes","slice","indexOf","alt","author","reviewsBox","name","movieItem","updated_at","content","id","Pagination","count","onChange","evt","value","boundaryCount","color"],"mappings":"4HACAA,EAAOC,QAAU,CAAC,WAAa,4BAA4B,WAAa,4BAA4B,SAAW,0BAA0B,WAAa,4BAA4B,QAAU,2B,kJC8E7KC,EAxEC,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACOC,mBAAS,MADhB,mBACxBC,EADwB,KACXC,EADW,OAEPF,mBAAS,GAFF,mBAExBG,EAFwB,KAElBC,EAFkB,OAGKJ,mBAAS,GAHd,mBAGxBK,EAHwB,KAGZC,EAHY,KAK/BC,qBAAU,WACRC,IAAeT,EAASI,GAAMM,MAAK,SAAAC,GACjCC,QAAQC,IAAIF,GACPA,EAAKG,QAAQC,QAIlBZ,EAAeQ,EAAKG,SACpBP,EAAcI,EAAKK,cAJjBC,IAAMC,MAAM,kCAMf,CAAClB,EAASI,IAgBb,OACE,qCACGF,GACC,oBAAIiB,UAAWC,IAAEC,WAAjB,SACGnB,EAAYoB,KAAI,SAAAC,GAAM,OACrB,qBAAoBJ,UAAWC,IAAEI,WAAjC,UACE,qBAAKL,UAAWC,IAAEK,SAAlB,SACE,qBACEN,UAAWC,IAAEM,OACbC,KAvBEC,EAuBaL,EAAOM,eAAeC,YAtB9CF,EAGDA,EAAKG,SAAS,QACTH,EAAKI,MAAMJ,EAAKK,QAAQ,MAE3B,mCAAN,OAA0CL,GALjC,+FAsBKM,IAAKX,EAAOY,WAGhB,sBAAKhB,UAAWC,IAAEgB,WAAlB,UACE,oBAAIjB,UAAWC,IAAEiB,KAAjB,SAAwBd,EAAOY,SAC/B,mBAAGhB,UAAWC,IAAEkB,UAAhB,SACGf,EAAOgB,WAAWP,MAAM,EAAGT,EAAOgB,WAAWN,QAAQ,QAExD,mBAAGd,UAAWC,IAAEoB,QAAhB,SAA0BjB,EAAOiB,eAb5BjB,EAAOkB,IAnBR,IAAAb,OAsCbtB,EAAa,GACZ,cAACoC,EAAA,EAAD,CACEC,MAAOrC,EACPF,KAAMA,EACNwC,SAhCa,SAACC,EAAKC,GACzBzC,EAAQyC,IAgCFC,cAAe,EACfC,MAAM","file":"static/js/reviews-subview.0bec15f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"reviewList\":\"Reviews_reviewList__10WVX\",\"reviewItem\":\"Reviews_reviewItem__F9-G_\",\"imageBox\":\"Reviews_imageBox__x8dej\",\"reviewsBox\":\"Reviews_reviewsBox__1FBN3\",\"content\":\"Reviews_content__kjygT\"};","import { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { Pagination } from '@material-ui/lab';\nimport PropTypes from 'prop-types';\nimport * as api from '../../Services/apiServices';\nimport s from './Reviews.module.css';\n\nconst Reviews = ({ movieId }) => {\n  const [reviewsList, setReviewsList] = useState(null);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n\n  useEffect(() => {\n    api.getReviews(movieId, page).then(data => {\n      console.log(data);\n      if (!data.results.length) {\n        toast.error('No reviews for this movie');\n        return;\n      }\n      setReviewsList(data.results);\n      setTotalPages(data.total_pages);\n    });\n  }, [movieId, page]);\n\n  const getAvatar = path => {\n    if (!path) {\n      return 'https://upload.wikimedia.org/wikipedia/commons/thumb/4/41/Noimage.svg/555px-Noimage.svg.png';\n    }\n    if (path.includes('http')) {\n      return path.slice(path.indexOf('h'));\n    }\n    return `https://image.tmdb.org/t/p/w500/${path}`;\n  };\n\n  const handleChange = (evt, value) => {\n    setPage(value);\n  };\n\n  return (\n    <>\n      {reviewsList && (\n        <ul className={s.reviewList}>\n          {reviewsList.map(review => (\n            <li key={review.id} className={s.reviewItem}>\n              <div className={s.imageBox}>\n                <img\n                  className={s.avatar}\n                  src={getAvatar(review.author_details.avatar_path)}\n                  alt={review.author}\n                ></img>\n              </div>\n              <div className={s.reviewsBox}>\n                <h2 className={s.name}>{review.author}</h2>\n                <p className={s.movieItem}>\n                  {review.updated_at.slice(0, review.updated_at.indexOf('T'))}\n                </p>\n                <p className={s.content}>{review.content}</p>\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n      {totalPages > 1 && (\n        <Pagination\n          count={totalPages}\n          page={page}\n          onChange={handleChange}\n          boundaryCount={2}\n          color=\"secondary\"\n        />\n      )}\n    </>\n  );\n};\n\nReviews.propTypes = {\n  movieId: PropTypes.number.isRequired,\n};\n\nexport default Reviews;\n"],"sourceRoot":""}